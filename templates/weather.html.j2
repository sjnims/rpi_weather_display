<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Display</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: white;
            color: black;
            width: {{ config.display.width }}px;
            height: {{ config.display.height }}px;
            overflow: hidden;
        }

        .container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            grid-template-rows: auto 1fr auto;
            grid-template-areas:
                "header header"
                "current forecast"
                "footer footer";
            height: 100vh;
            padding: 20px;
            box-sizing: border-box;
        }

        .header {
            grid-area: header;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #000;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        .current-weather {
            grid-area: current;
            display: flex;
            flex-direction: column;
            padding-right: 20px;
        }

        .forecast {
            grid-area: forecast;
            border-left: 1px solid #000;
            padding-left: 20px;
        }

        .footer {
            grid-area: footer;
            display: flex;
            justify-content: space-between;
            border-top: 1px solid #000;
            padding-top: 10px;
            margin-top: 20px;
            font-size: 14px;
        }

        .temp-large {
            font-size: 72px;
            font-weight: bold;
            margin: 20px 0;
        }

        .location {
            font-size: 24px;
            font-weight: bold;
        }

        .condition {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .details {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            margin-top: 20px;
        }

        .detail {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .detail-label {
            font-size: 14px;
            color: #666;
        }

        .detail-value {
            font-size: 18px;
            font-weight: bold;
        }

        .forecast-day {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .forecast-day:last-child {
            border-bottom: none;
        }

        .day-name {
            font-weight: bold;
            width: 40px;
        }

        .forecast-icon {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .forecast-temp {
            text-align: right;
            min-width: 80px;
        }

        .high-temp {
            font-weight: bold;
        }

        .low-temp {
            color: #666;
        }

        .battery-status {
            display: flex;
            align-items: center;
        }

        .battery-icon {
            width: 24px;
            height: 24px;
            margin-right: 5px;
        }

        .hourly-forecast {
            margin-top: 20px;
            display: flex;
            overflow-x: hidden;
            border-top: 1px solid #eee;
            padding-top: 10px;
        }

        .hour {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-right: 20px;
            min-width: 50px;
        }

        .hour-label {
            font-size: 14px;
        }

        .hour-temp {
            font-size: 16px;
            font-weight: bold;
        }

        .icon {
            display: inline-block;
            width: 24px;
            height: 24px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        .icon-large {
            width: 64px;
            height: 64px;
        }

        svg {
            fill: currentColor;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="location">{{ weather.city_name or "Weather" }}</div>
            <div class="last-update">Updated: {{ weather.last_updated | format_datetime }}</div>
        </div>

        <div class="current-weather">
            <div class="condition">
                <svg class="icon-large">
                    <use xlink:href="/static/icons/sprite.svg#{{ weather.current.weather[0].icon | get_icon }}"></use>
                </svg>
                {{ weather.current.weather[0].description | capitalize }}
            </div>

            <div class="temp-large">{{ weather.current.temp | format_temp }}</div>

            <div class="feels-like">
                Feels like {{ weather.current.feels_like | format_temp }}
            </div>

            <div class="details">
                <div class="detail">
                    <div class="detail-label">Humidity</div>
                    <div class="detail-value">{{ weather.current.humidity }}%</div>
                </div>

                <div class="detail">
                    <div class="detail-label">Wind</div>
                    <div class="detail-value">
                        {% if is_metric %}
                            {{ weather.current.wind_speed | round(1) }} m/s
                        {% else %}
                            {{ weather.current.wind_speed | round(1) }} mph
                        {% endif %}
                    </div>
                </div>

                <div class="detail">
                    <div class="detail-label">Pressure</div>
                    <div class="detail-value">{{ weather.current.pressure }} hPa</div>
                </div>

                <div class="detail">
                    <div class="detail-label">UV Index</div>
                    <div class="detail-value">{{ weather.current.uvi | round(1) }}</div>
                </div>

                <div class="detail">
                    <div class="detail-label">Visibility</div>
                    <div class="detail-value">
                        {% if is_metric %}
                            {{ (weather.current.visibility / 1000) | round(1) }} km
                        {% else %}
                            {{ (weather.current.visibility / 1609.34) | round(1) }} mi
                        {% endif %}
                    </div>
                </div>

                {% if weather.air_pollution %}
                <div class="detail">
                    <div class="detail-label">Air Quality</div>
                    <div class="detail-value">
                        {% set aqi_labels = ["Good", "Fair", "Moderate", "Poor", "Very Poor"] %}
                        {{ aqi_labels[weather.air_pollution.aqi - 1] }}
                    </div>
                </div>
                {% endif %}
            </div>

            <div class="hourly-forecast">
                {% for hour in weather.hourly[:8] %}
                <div class="hour">
                    <div class="hour-label">{{ hour.dt | format_datetime("%H:%M") }}</div>
                    <svg class="icon">
                        <use xlink:href="/static/icons/sprite.svg#{{ hour.weather[0].icon | get_icon }}"></use>
                    </svg>
                    <div class="hour-temp">{{ hour.temp | format_temp }}</div>
                </div>
                {% endfor %}
            </div>
        </div>

        <div class="forecast">
            <h2>5-Day Forecast</h2>

            {% for day in weather.daily %}
            <div class="forecast-day">
                <div class="day-name">
                    {% if loop.index0 == 0 %}
                        Today
                    {% elif loop.index0 == 1 %}
                        Tmrw
                    {% else %}
                        {{ day.dt | format_datetime("%a") }}
                    {% endif %}
                </div>

                <div class="forecast-icon">
                    <svg class="icon">
                        <use xlink:href="/static/icons/sprite.svg#{{ day.weather[0].icon | get_icon }}"></use>
                    </svg>
                </div>

                <div class="forecast-condition">
                    {{ day.weather[0].description | capitalize }}
                </div>

                <div class="forecast-temp">
                    <div class="high-temp">{{ day.temp.max | format_temp }}</div>
                    <div class="low-temp">{{ day.temp.min | format_temp }}</div>
                </div>
            </div>
            {% endfor %}
        </div>

        <div class="footer">
            <div class="sunrise-sunset">
                Sunrise: {{ weather.current.sunrise | format_datetime("%H:%M") }} |
                Sunset: {{ weather.current.sunset | format_datetime("%H:%M") }}
            </div>

            <div class="battery-status">
                <svg class="battery-icon">
                    <use xlink:href="/static/icons/sprite.svg#{{ battery_icon }}"></use>
                </svg>
                {{ battery.level }}%
                {% if battery.state == "charging" %}
                    (Charging)
                {% elif battery.time_remaining %}
                    ({{ (battery.time_remaining / 60) | round(1) }} hrs)
                {% endif %}
            </div>
        </div>
    </div>
</body>
</html>